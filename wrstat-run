#!/bin/bash

#$1=test name
#$2..$#= cmd

#get the location of the current script
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
tool_path="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

#parsing arguments
if [ $# -lt 2 ]; then
	echo "Usage: $0 \"test directory\" prog [arg1] [arg2] ..."
	exit 0
fi
test_dir=$( readlink -f "$1")

if [ "$(which $2 2>/dev/null)" = "" ]; then
	echo "ERROR: \"$2\" comand or file not found"
	exit 0
fi
cmd=${@:2:$#}

#prepare testdir
mkdir -p "$test_dir"
if [ ! -d "$test_dir" ]; then
	echo "ERROR: failed to created $test_dir directory."
	exit 0
fi

if [ ! -f "$tool_path/wrstat.config" ]; then
	echo "ERROR: could not found $tool_path/wrstat.config"
	echo "ERROR: for example config file see $tool_path/wrstat.config.template"
	exit 0
fi

cp "$tool_path/wrstat.config" "$test_dir/wrstat.config"
echo "$cmd" > "$test_dir/cmd"
sample_dir="$test_dir/samples"
mkdir -p "$test_dir/samples"
rm -f "$test_dir/samples"/*

#starting deamon
runasroot="$( cat "$test_dir/wrstat.config" | grep "runasroot" | cut -d " "  -f 2-)"
runasroot=${runasroot,,}

rm -f "$test_dir/deamon.ready" &> /dev/null
if [ $runasroot == "true" ]; then
  sudo python "$tool_path/wrstat-deamon.py" "$test_dir" &
else
  python "$tool_path/wrstat-deamon.py" "$test_dir" &
fi
deamon_pid=$!

#waiting for deamon to show up
while [ ! -f "$test_dir/deamon.ready" ]
do
	sleep 0.5
done
rm -f "$test_dir/deamon.ready"

#running command
echo eval $cmd
time (eval $cmd &> "$test_dir/output") &> "$test_dir/time"

#deinit deamon
echo "killing wrstat deamon deamon..."
if [ $runasroot == "true" ]; then
  sudo kill -SIGTERM $deamon_pid
else
  kill -SIGTERM $deamon_pid
fi
wait $deamon_pid

#chown everything in test_dir to current user
if [ $runasroot == "true" ]; then
  user=$USER
  group=$(id -gn)
  sudo chown -R $user:$group "$test_dir"
  find "$test_dir" -type d -exec chmod 755 {} \;
  find "$test_dir" -type f -exec chmod 644 {} \;
fi

#postprocessing
python "$tool_path/wrstat-parser.py" "$test_dir"
python "$tool_path/wrstat-graph.py" "$test_dir"
