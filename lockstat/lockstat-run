#!/bin/bash

#$1=test name
#$2..$#= cmd

#get the location of the current script
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
tool_path="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

#parsing arguments
if [ $# -lt 2 ]; then
	echo "Usage: $0 \"test directory\" prog [arg1] [arg2] ..."
	exit 0
fi
test_dir="$1"

if [ "$(which $2 2>/dev/null)" = "" ]; then
	echo "ERROR: \"$2\" comand or file not found"
	exit 0
fi
cmd=${@:2:$#}

#prepare testdir
mkdir -p "$test_dir"
if [ ! -d "$test_dir" ]; then
	echo "ERROR: failed to created $test_dir directory."
	exit 0
fi
cp "$tool_path/lockstat.config" "$test_dir/lockstat.config"
echo "$cmd" > "$test_dir/cmd"
sample_dir="$test_dir/samples"
mkdir -p "$test_dir/samples"
rm -f "$test_dir/samples"/*

#starting sampling deamon
sudo python "$tool_path/lockstat-sampling-deamon.py" "$test_dir"&
sampling_deamon_pid=$!

#running command
echo eval $cmd
eval $cmd $i > "$test_dir/output"

#deinit sampling deamon
echo "killing sampling deamon..."
sudo kill -SIGTERM $sampling_deamon_pid
wait $sampling_deamon_pid

#chown everything in test_dir to current user
user=$USER
group=$(id -gn)
sudo chown -R $user:$group "$test_dir"
find "$test_dir" -type d -exec chmod 755 {} \;
find "$test_dir" -type f -exec chmod 644 {} \;

#postprocessing
python "$tool_path/lockstat-parser.py" "$test_dir"
python "$tool_path/lockstat-graph.py" "$test_dir"
